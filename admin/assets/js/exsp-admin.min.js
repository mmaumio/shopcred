jQuery(document).ready((function (e) { "use strict"; e(".spc-dashboard-tabs li.spc-tab-btn a").on("click", (function (s) { s.preventDefault(), e(".spc-dashboard-tabs li.spc-tab-btn a").removeClass("active"), e(this).addClass("active"); var t = e(this).attr("href"); e(".spc-dashboard-tab").removeClass("active"), e(".spc-dashboard-tabs-wrapper").find(t).addClass("active"), e(".spc-dashboard-tabs .active-switcher").css("width", e(this).width() + 62), e(".spc-dashboard-tabs .active-switcher").css("left", e(this).position().left), console.log(e(this).width() + 62) })); var s = e(".spc-dashboard-header-wrapper .spc-btn"); e(".spc-dashboard-tab input, .spc-dashboard-tab button").on("click", (function () { s.addClass("spc-save-now"), s.removeAttr("disabled").css("cursor", "pointer") })), e(".spc-js-element-save-setting").on("click", (function (t) { t.preventDefault(); var a = e(this); e(this).hasClass("spc-save-now") ? e.ajax({ url: js_spc_settings.ajaxurl, type: "post", data: { action: "spc_ajax_save_elements_setting", security: js_spc_settings.ajax_nonce, fields: e("#spc-elements-settings").serialize() }, beforeSend: function () { a.html('<svg id="spc-spinner" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48"><circle cx="24" cy="4" r="4" fill="#fff"/><circle cx="12.19" cy="7.86" r="3.7" fill="#fffbf2"/><circle cx="5.02" cy="17.68" r="3.4" fill="#fef7e4"/><circle cx="5.02" cy="30.32" r="3.1" fill="#fef3d7"/><circle cx="12.19" cy="40.14" r="2.8" fill="#feefc9"/><circle cx="24" cy="44" r="2.5" fill="#feebbc"/><circle cx="35.81" cy="40.14" r="2.2" fill="#fde7af"/><circle cx="42.98" cy="30.32" r="1.9" fill="#fde3a1"/><circle cx="42.98" cy="17.68" r="1.6" fill="#fddf94"/><circle cx="35.81" cy="7.86" r="1.3" fill="#fcdb86"/></svg><span>Saving Data..</span>') }, success: function (t) { a.html("Save Settings"), e(".spc-dashboard-header-right").prepend('<span class="spc-settings-saved">Settings Saved</span>').fadeIn("slow"), s.removeClass("spc-save-now"), setTimeout((function () { e(".spc-settings-saved").fadeOut("slow") }), 2e3) }, error: function () { } }) : e(this).attr("disabled", "true").css("cursor", "not-allowed") })); var t = e(".spc-dashboard-checkbox.active .spc-dashboard-checkbox-label input"); e.each(t, (function () { e(this).prop("checked") && e(this).closest(".spc-dashboard-checkbox.active").addClass("selected") })), e(t).change((function () { e(this).is(":checked") ? e(this).closest(".spc-dashboard-checkbox.active").addClass("selected") : e(this).closest(".spc-dashboard-checkbox.active").removeClass("selected") })), e(".spc-element-enable").click((function (a) { a.preventDefault(), e(t).each((function () { var s = e(this).closest(".spc-dashboard-checkbox.active"); "flex" == s.css("display") && (s.addClass("selected"), e(this).prop("checked", !0).change()) })), s.addClass("spc-save-now") })), e(".spc-element-disable").click((function (a) { a.preventDefault(), e(t).each((function () { var s = e(this).closest(".spc-dashboard-checkbox.active"); "flex" == s.css("display") && (s.remove("selected"), e(this).prop("checked", !1).change()) })), s.addClass("spc-save-now") })); var a = e("#spc-element-filter-search-input"), c = e(".spc-dashboard-checkbox-container .spc-dashboard-checkbox"); e(a).on("keyup", (function () { var s = e(this).val().toLowerCase(); e(c).filter((function () { e(this).toggle(e(this).text().toLowerCase().indexOf(s) > -1) })) })), e("#exed-element-filter-dropdown-option").niceSelect(), e("select#exed-element-filter-dropdown-option").change((function () { var s, t, a = e(this).val(); s = a, t = e(".spc-dashboard-checkbox-container .spc-dashboard-checkbox"), e(t).hide(), "all" == s ? e(".spc-dashboard-checkbox-container").find(".spc-dashboard-checkbox").each((function (s) { e(this).show() })) : e(".spc-dashboard-checkbox-container").find(".spc-dashboard-checkbox[data-tag*=" + s + "]").each((function (s) { e(this).show() })) })), e(".spc-dashboard-checkbox-container").find(".spc-dashboard-checkbox.pro .spc-dashboard-checkbox-label").click((function () { e(".spc-dashboard-popup-message").addClass("popup-active"), e(".spc-dashboard-popup-overlay").addClass("popup-active"), setTimeout((function () { e(".spc-dashboard-popup-message").removeClass("popup-active"), e(".spc-dashboard-popup-overlay").removeClass("popup-active") }), 8e3) })), e(".spc-dashboard-popup-overlay").click((function () { e(".spc-dashboard-popup-message").removeClass("popup-active"), e(".spc-dashboard-popup-overlay").removeClass("popup-active") })) })), function (e) { e.fn.niceSelect = function (s) { if ("string" == typeof s) return "update" == s ? this.each((function () { var s = e(this), a = e(this).next(".nice-select"), c = a.hasClass("open"); a.length && (a.remove(), t(s), c && s.next().trigger("click")) })) : "destroy" == s ? (this.each((function () { var s = e(this), t = e(this).next(".nice-select"); t.length && (t.remove(), s.css("display", "")) })), 0 == e(".nice-select").length && e(document).off(".nice_select")) : console.log('Method "' + s + '" does not exist.'), this; function t(s) { s.after(e("<div></div>").addClass("nice-select").addClass(s.attr("class") || "").addClass(s.attr("disabled") ? "disabled" : "").attr("tabindex", s.attr("disabled") ? null : "0").html('<span class="current"></span><ul class="list"></ul>')); var t = s.next(), a = s.find("option"), c = s.find("option:selected"); t.find(".current").html(c.data("display") || c.text()), a.each((function (s) { var a = e(this), c = a.data("display"); t.find("ul").append(e("<li></li>").attr("data-value", a.val()).attr("data-display", c || null).addClass("option" + (a.is(":selected") ? " selected" : "") + (a.is(":disabled") ? " disabled" : "")).html(a.text())) })) } this.hide(), this.each((function () { var s = e(this); s.next().hasClass("nice-select") || t(s) })), e(document).off(".nice_select"), e(document).on("click.nice_select", ".nice-select", (function (s) { var t = e(this); e(".nice-select").not(t).removeClass("open"), t.toggleClass("open"), t.hasClass("open") ? (t.find(".option"), t.find(".focus").removeClass("focus"), t.find(".selected").addClass("focus")) : t.focus() })), e(document).on("click.nice_select", (function (s) { 0 === e(s.target).closest(".nice-select").length && e(".nice-select").removeClass("open").find(".option") })), e(document).on("click.nice_select", ".nice-select .option:not(.disabled)", (function (s) { var t = e(this), a = t.closest(".nice-select"); a.find(".selected").removeClass("selected"), t.addClass("selected"); var c = t.data("display") || t.text(); a.find(".current").text(c), a.prev("select").val(t.data("value")).trigger("change") })), e(document).on("keydown.nice_select", ".nice-select", (function (s) { var t = e(this), a = e(t.find(".focus") || t.find(".list .option.selected")); if (32 == s.keyCode || 13 == s.keyCode) return t.hasClass("open") ? a.trigger("click") : t.trigger("click"), !1; if (40 == s.keyCode) { if (t.hasClass("open")) { var c = a.nextAll(".option:not(.disabled)").first(); c.length > 0 && (t.find(".focus").removeClass("focus"), c.addClass("focus")) } else t.trigger("click"); return !1 } if (38 == s.keyCode) { if (t.hasClass("open")) { var i = a.prevAll(".option:not(.disabled)").first(); i.length > 0 && (t.find(".focus").removeClass("focus"), i.addClass("focus")) } else t.trigger("click"); return !1 } if (27 == s.keyCode) t.hasClass("open") && t.trigger("click"); else if (9 == s.keyCode && t.hasClass("open")) return !1 })); var a = document.createElement("a").style; return a.cssText = "pointer-events:auto", "auto" !== a.pointerEvents && e("html").addClass("no-csspointerevents"), this } }(jQuery);